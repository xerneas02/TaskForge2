@page "/login"
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject LoginService loginService
@inject AuthenticationStateProvider authStateProvider
@using System.Text.Json
@using System.Net.Http
@using System.Text
@using Newtonsoft.Json
<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <InputText @bind-Value="loginModel.Username" />
    <InputText @bind-Value="loginModel.Password" type="password" />
    <button type="submit">Login</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();


    private async void HandleLogin()
    {
        var gatewayUrl = "http://localhost:5001";
        var endpoint = "/api/Users/login";
        var requestData = new { name = loginModel.Username,
                                pass = loginModel.Password };
        var jsonContent = new StringContent(System.Text.Json.JsonSerializer.Serialize(requestData), Encoding.UTF8, "application/json");
        
        try
        {
            // Effectuer la requête GET
            HttpResponseMessage result = await loginService.TryLogin($"{gatewayUrl}{endpoint}", jsonContent);
            
            if(result.IsSuccessStatusCode)
            {
                string responseBody = await result.Content.ReadAsStringAsync();
                Console.WriteLine(responseBody);
                UserDTO user = JsonConvert.DeserializeObject<UserDTO>(responseBody)!;
                var userClaim = await ((CustomAuthenticationStateProvider)authStateProvider).MarkUserAsAuthenticated(user);
                NavigationManager.NavigateTo("/");    
            }
            else{
                Console.WriteLine("NON NON NON NON NON");
            }
        }
        catch (Exception ex)
        {
            // Gérer les erreurs (par exemple, afficher un message d'erreur)
            // ...
        }
    }

    private class LoginModel
    {
        public string Username { get; set; } = "";
        public string Password { get; set; } = "";
    }
}